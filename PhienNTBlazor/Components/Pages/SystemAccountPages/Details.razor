@page "/systemaccounts/details"
@using Models
@using Repository
@inject IAccountRepo AccountRepo
@inject NavigationManager NavigationManager

<PageTitle>Account Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>System Account</h2>
    <hr />
    @if (account is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Account Name</dt>
            <dd class="col-sm-10">@account.AccountName</dd>
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@account.AccountEmail</dd>
            <dt class="col-sm-2">Role</dt>
            <dd class="col-sm-10">@account.AccountRole</dd>
            <dt class="col-sm-2">Password (Hashed)</dt>
            <dd class="col-sm-10">@account.AccountPassword</dd>
        </dl>

        @if (createdArticles.Any())
        {
            <h3>Articles Created</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Created Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var article in createdArticles)
                    {
                        <tr>
                            <td>
                                <a href="@($"/newsarticles/details?newsarticleid={article.NewsArticleId}")">
                                    @article.NewsTitle
                                </a>
                            </td>
                            <td>@article.CreatedDate.ToShortDateString()</td>
                            <td>@article.NewsStatus</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        @if (updatedArticles.Any())
        {
            <h3>Articles Updated</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Modified Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var article in updatedArticles)
                    {
                        <tr>
                            <td>
                                <a href="@($"/newsarticles/details?newsarticleid={article.NewsArticleId}")">
                                    @article.NewsTitle
                                </a>
                            </td>
                            <td>@(article.ModifiedDate?.ToShortDateString() ?? "N/A")</td>
                            <td>@article.NewsStatus</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        <div>
            <a href="@($"/systemaccounts/edit?accountid={account.AccountId}")">Edit</a> |
            <a href="/systemaccounts">Back to List</a>
        </div>
    }
</div>

@code {
    private SystemAccount? account;
    private IEnumerable<NewsArticle> createdArticles = Array.Empty<NewsArticle>();
    private IEnumerable<NewsArticle> updatedArticles = Array.Empty<NewsArticle>();

    [SupplyParameterFromQuery]
    private int AccountId { get; set; }

    protected override void OnInitialized()
    {
        account = AccountRepo.GetAccountById(AccountId);

        if (account is null)
        {
            NavigationManager.NavigateTo("notfound");
            return;
        }

        // Get articles created and updated by this account
        createdArticles = AccountRepo.GetArticlesCreatedByAccount(AccountId);
        updatedArticles = AccountRepo.GetArticlesUpdatedByAccount(AccountId);
    }
}