@page "/categories/create"
@using Microsoft.EntityFrameworkCore
@using Models
@inject IDbContextFactory<Models.NewsSystemContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Category</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Category" OnValidSubmit="AddCategory" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="categoryname" class="form-label">CategoryName:</label> 
                <InputText id="categoryname" @bind-Value="Category.CategoryName" class="form-control" /> 
                <ValidationMessage For="() => Category.CategoryName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="categorydesciption" class="form-label">CategoryDesciption:</label> 
                <InputText id="categorydesciption" @bind-Value="Category.CategoryDesciption" class="form-control" /> 
                <ValidationMessage For="() => Category.CategoryDesciption" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="parentcategoryid" class="form-label">ParentCategoryId:</label> 
                <InputNumber id="parentcategoryid" @bind-Value="Category.ParentCategoryId" class="form-control" /> 
                <ValidationMessage For="() => Category.ParentCategoryId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isactive" class="form-label">IsActive:</label> 
                <InputCheckbox id="isactive" @bind-Value="Category.IsActive" class="form-check-input" /> 
                <ValidationMessage For="() => Category.IsActive" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/categories">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Category Category { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddCategory()
    {
        using var context = DbFactory.CreateDbContext();
        context.Categories.Add(Category);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/categories");
    }
}
