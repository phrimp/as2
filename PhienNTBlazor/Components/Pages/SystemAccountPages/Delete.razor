@page "/systemaccounts/delete"
@using Microsoft.EntityFrameworkCore
@using Models
@inject IDbContextFactory<Models.NewsSystemContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>SystemAccount</h2>
    <hr />
    @if (systemaccount is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">AccountName</dt>
            <dd class="col-sm-10">@systemaccount.AccountName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AccountEmail</dt>
            <dd class="col-sm-10">@systemaccount.AccountEmail</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AccountRole</dt>
            <dd class="col-sm-10">@systemaccount.AccountRole</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AccountPassword</dt>
            <dd class="col-sm-10">@systemaccount.AccountPassword</dd>
        </dl>
        <EditForm method="post" Model="systemaccount" OnValidSubmit="DeleteSystemAccount" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(systemaccount is null)">Delete</button> |
            <a href="/systemaccounts">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private SystemAccount? systemaccount;

    [SupplyParameterFromQuery]
    private int AccountId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        systemaccount = await context.SystemAccounts.FirstOrDefaultAsync(m => m.AccountId == AccountId);

        if (systemaccount is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteSystemAccount()
    {
        using var context = DbFactory.CreateDbContext();
        context.SystemAccounts.Remove(systemaccount!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/systemaccounts");
    }
}
