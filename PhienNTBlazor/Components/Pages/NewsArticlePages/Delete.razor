@page "/newsarticles/delete"
@using Microsoft.EntityFrameworkCore
@using Models
@inject IDbContextFactory<Models.NewsSystemContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>NewsArticle</h2>
    <hr />
    @if (newsarticle is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">NewsTitle</dt>
            <dd class="col-sm-10">@newsarticle.NewsTitle</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Headline</dt>
            <dd class="col-sm-10">@newsarticle.Headline</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedDate</dt>
            <dd class="col-sm-10">@newsarticle.CreatedDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">NewsContent</dt>
            <dd class="col-sm-10">@newsarticle.NewsContent</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">NewsSource</dt>
            <dd class="col-sm-10">@newsarticle.NewsSource</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CategoryId</dt>
            <dd class="col-sm-10">@newsarticle.CategoryId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">NewsStatus</dt>
            <dd class="col-sm-10">@newsarticle.NewsStatus</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedById</dt>
            <dd class="col-sm-10">@newsarticle.CreatedById</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedById</dt>
            <dd class="col-sm-10">@newsarticle.UpdatedById</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ModifiedDate</dt>
            <dd class="col-sm-10">@newsarticle.ModifiedDate</dd>
        </dl>
        <EditForm method="post" Model="newsarticle" OnValidSubmit="DeleteNewsArticle" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(newsarticle is null)">Delete</button> |
            <a href="/newsarticles">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private NewsArticle? newsarticle;

    [SupplyParameterFromQuery]
    private int NewsArticleId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        newsarticle = await context.NewsArticles.FirstOrDefaultAsync(m => m.NewsArticleId == NewsArticleId);

        if (newsarticle is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteNewsArticle()
    {
        using var context = DbFactory.CreateDbContext();
        context.NewsArticles.Remove(newsarticle!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/newsarticles");
    }
}
