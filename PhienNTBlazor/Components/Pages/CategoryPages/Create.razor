@page "/categories/create"
@using Models
@using Repository
@inject ICategoryRepo CategoryRepo
@inject NavigationManager NavigationManager

<PageTitle>Create Category</PageTitle>

<h1>Create</h1>

<h2>Category</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Category" OnValidSubmit="AddCategory" FormName="">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="categoryname" class="form-label">CategoryName:</label>
                <InputText id="categoryname" @bind-Value="Category.CategoryName" class="form-control" />
                <ValidationMessage For="() => Category.CategoryName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="categorydesciption" class="form-label">CategoryDesciption:</label>
                <InputText id="categorydesciption" @bind-Value="Category.CategoryDesciption" class="form-control" />
                <ValidationMessage For="() => Category.CategoryDesciption" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="parentcategoryid" class="form-label">Parent Category:</label>
                <InputSelect id="parentcategoryid" @bind-Value="SelectedParentId" class="form-control">
                    <option value="">-- No Parent Category --</option>
                    @foreach (var parent in parentCategories)
                    {
                        <option value="@parent.CategoryId">@parent.CategoryName</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Category.ParentCategoryId" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="isactive" class="form-label">IsActive:</label>
                <InputCheckbox id="isactive" @bind-Value="Category.IsActive" class="form-check-input" />
                <ValidationMessage For="() => Category.IsActive" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/categories">Back to List</a>
</div>

@code {
    private Category Category { get; set; } = new() { IsActive = true };

    private IEnumerable<Category> parentCategories = Array.Empty<Category>();
    private string? SelectedParentId { get; set; }

    protected override void OnInitialized()
    {
        // Get possible parent categories
        parentCategories = CategoryRepo.GetActiveCategories();
    }

    private async Task AddCategory()
    {
        // Set the ParentCategoryId based on selection
        if (string.IsNullOrEmpty(SelectedParentId))
        {
            Category.ParentCategoryId = null;
        }
        else
        {
            Category.ParentCategoryId = int.Parse(SelectedParentId);
        }

        // Add the category using repository
        CategoryRepo.CreateCategory(Category);
        NavigationManager.NavigateTo("/categories");
    }
}