@page "/categories/edit"
@using Models
@using Repository
@inject ICategoryRepo CategoryRepo
@inject NavigationManager NavigationManager

<PageTitle>Edit Category</PageTitle>

<h1>Edit</h1>

<h2>Category</h2>
<hr />
@if (Category is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="Category" OnValidSubmit="UpdateCategory" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary role="alert" />
                <input type="hidden" name="Category.CategoryId" value="@Category.CategoryId" />
                <div class="mb-3">
                    <label for="categoryname" class="form-label">Category Name:</label>
                    <InputText id="categoryname" @bind-Value="Category.CategoryName" class="form-control" />
                    <ValidationMessage For="() => Category.CategoryName" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="categorydesciption" class="form-label">Description:</label>
                    <InputText id="categorydesciption" @bind-Value="Category.CategoryDesciption" class="form-control" />
                    <ValidationMessage For="() => Category.CategoryDesciption" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="parentcategoryid" class="form-label">Parent Category:</label>
                    <InputSelect id="parentcategoryid" @bind-Value="Category.ParentCategoryId" class="form-select">
                        <option value="">-- None --</option>
                        @foreach (var parent in parentCategories)
                        {
                            @if (parent.CategoryId != Category.CategoryId)
                            {
                                <option value="@parent.CategoryId">@parent.CategoryName</option>
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="() => Category.ParentCategoryId" class="text-danger" />
                </div>
                <div class="mb-3 form-check">
                    <InputCheckbox id="isactive" @bind-Value="Category.IsActive" class="form-check-input" />
                    <label for="isactive" class="form-check-label">Is Active</label>
                    <ValidationMessage For="() => Category.IsActive" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="/categories" class="btn btn-secondary">Back to List</a>
            </EditForm>
        </div>
    </div>
}

@code {
    [SupplyParameterFromQuery]
    private int CategoryId { get; set; }

    [SupplyParameterFromForm]
    private Category? Category { get; set; }

    private IEnumerable<Category> parentCategories = new List<Category>();

    protected override void OnInitialized()
    {
        parentCategories = CategoryRepo.GetAllCategories();

        Category ??= CategoryRepo.GetCategoryById(CategoryId);

        if (Category is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private void UpdateCategory()
    {
        if (Category.ParentCategoryId == 0)
        {
            Category.ParentCategoryId = null;
        }

        CategoryRepo.UpdateCategory(Category);
        NavigationManager.NavigateTo("/categories");
    }
}