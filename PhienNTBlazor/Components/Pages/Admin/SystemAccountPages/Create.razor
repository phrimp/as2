@page "/systemaccounts/create"
@using Models
@using Repository
@inject IAccountRepo AccountRepo
@inject NavigationManager NavigationManager

<PageTitle>Create Account</PageTitle>

<h1>Create</h1>

<h2>System Account</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Account" OnValidSubmit="CreateAccount" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="mb-3">
                <label for="accountname" class="form-label">Name:</label>
                <InputText id="accountname" @bind-Value="Account.AccountName" class="form-control" />
                <ValidationMessage For="() => Account.AccountName" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="accountemail" class="form-label">Email:</label>
                <InputText id="accountemail" @bind-Value="Account.AccountEmail" class="form-control" />
                <ValidationMessage For="() => Account.AccountEmail" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="accountrole" class="form-label">Role:</label>
                <InputSelect id="accountrole" @bind-Value="Account.AccountRole" class="form-select">
                    <option value="Admin">Admin</option>
                    <option value="Staff">Staff</option>
                    <option value="Lecturer">Lecturer</option>
                </InputSelect>
                <ValidationMessage For="() => Account.AccountRole" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="accountpassword" class="form-label">Password:</label>
                <InputText id="accountpassword" @bind-Value="Account.AccountPassword" type="password" class="form-control" />
                <ValidationMessage For="() => Account.AccountPassword" class="text-danger" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
            <a href="/systemaccounts" class="btn btn-secondary ms-2">Back to List</a>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private SystemAccount Account { get; set; } = new();

    private string errorMessage = string.Empty;

    private void CreateAccount()
    {
        if (AccountRepo.IsEmailExists(Account.AccountEmail))
        {
            errorMessage = "Email already exists";
            return;
        }

        AccountRepo.AddAccount(Account);

        NavigationManager.NavigateTo("/systemaccounts");
    }
}