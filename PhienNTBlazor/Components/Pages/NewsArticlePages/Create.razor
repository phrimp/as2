@page "/newsarticles/create"
@using Models
@using Repository
@inject INewsArticleRepo NewsArticleRepo
@inject ICategoryRepo CategoryRepo
@inject IAccountRepo AccountRepo
@inject NavigationManager NavigationManager

<PageTitle>Create News Article</PageTitle>

<h1>Create News Article</h1>

<hr />
<div class="row">
    <div class="col-md-6">
        <EditForm method="post" Model="NewsArticle" OnValidSubmit="AddNewsArticle" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="mb-3">
                <label for="newstitle" class="form-label">Title:</label>
                <InputText id="newstitle" @bind-Value="NewsArticle.NewsTitle" class="form-control" />
                <ValidationMessage For="() => NewsArticle.NewsTitle" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="headline" class="form-label">Headline:</label>
                <InputText id="headline" @bind-Value="NewsArticle.Headline" class="form-control" />
                <ValidationMessage For="() => NewsArticle.Headline" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="newscontent" class="form-label">Content:</label>
                <InputTextArea id="newscontent" @bind-Value="NewsArticle.NewsContent" class="form-control" rows="5" />
                <ValidationMessage For="() => NewsArticle.NewsContent" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="newssource" class="form-label">Source:</label>
                <InputText id="newssource" @bind-Value="NewsArticle.NewsSource" class="form-control" />
                <ValidationMessage For="() => NewsArticle.NewsSource" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="categoryid" class="form-label">Category:</label>
                <InputSelect id="categoryid" @bind-Value="NewsArticle.CategoryId" class="form-select">
                    <option value="0">-- Select Category --</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.CategoryId">@category.CategoryName</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => NewsArticle.CategoryId" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="newsstatus" class="form-label">Status:</label>
                <InputSelect id="newsstatus" @bind-Value="NewsArticle.NewsStatus" class="form-select">
                    <option value="Draft">Draft</option>
                    <option value="Published">Published</option>
                    <option value="Archived">Archived</option>
                </InputSelect>
                <ValidationMessage For="() => NewsArticle.NewsStatus" class="text-danger" />
            </div>

            <!-- Hidden fields -->
            <InputNumber id="createdbyid" @bind-Value="NewsArticle.CreatedById" class="d-none" />

            <button type="submit" class="btn btn-primary">Create</button>
            <a href="/newsarticles" class="btn btn-secondary ms-2">Cancel</a>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private NewsArticle NewsArticle { get; set; } = new();

    private IEnumerable<Category> categories = new List<Category>();

    protected override void OnInitialized()
    {
        NewsArticle.CreatedDate = DateTime.Now;
        NewsArticle.NewsStatus = "Draft";
        NewsArticle.CreatedById = 1; 

        categories = CategoryRepo.GetActiveCategories();
    }

    private void AddNewsArticle()
    {
        NewsArticle.CreatedDate = DateTime.Now;

        NewsArticleRepo.AddNewsArticle(NewsArticle);
        NavigationManager.NavigateTo("/newsarticles");
    }
}