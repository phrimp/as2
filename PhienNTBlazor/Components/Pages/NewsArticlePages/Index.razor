@page "/newsarticles"
@using Models
@using Repository
@implements IAsyncDisposable
@inject INewsArticleRepo NewsArticleRepo

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="newsarticles/create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>NewsTitle</th>
            <th>Headline</th>
            <th>CreatedDate</th>
            <th>NewsSource</th>
            <th>CategoryId</th>
            <th>NewsStatus</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var article in newsArticles)
        {
            <tr>
                <td>@article.NewsTitle</td>
                <td>@article.Headline</td>
                <td>@article.CreatedDate</td>
                <td>@article.NewsSource</td>
                <td>@article.CategoryId</td>
                <td>@article.NewsStatus</td>
                <td>
                    <a href="@($"newsarticles/edit?newsarticleid={article.NewsArticleId}")">Edit</a> |
                    <a href="@($"newsarticles/details?newsarticleid={article.NewsArticleId}")">Details</a> |
                    <a href="@($"newsarticles/delete?newsarticleid={article.NewsArticleId}")">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private IEnumerable<NewsArticle> newsArticles = new List<NewsArticle>();

    protected override void OnInitialized()
    {
        newsArticles = NewsArticleRepo.GetAllNewsArticles();
    }

    public ValueTask DisposeAsync()
    {
        return ValueTask.CompletedTask;
    }
}